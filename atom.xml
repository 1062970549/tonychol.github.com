<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[TonyChol]]></title>
  <link href="http://TonyChol.github.io/atom.xml" rel="self"/>
  <link href="http://TonyChol.github.io/"/>
  <updated>2013-11-19T18:29:55+08:00</updated>
  <id>http://TonyChol.github.io/</id>
  <author>
    <name><![CDATA[TonyChol]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Decision System]]></title>
    <link href="http://TonyChol.github.io/blog/2013/11/19/decision-system/"/>
    <updated>2013-11-19T08:19:00+08:00</updated>
    <id>http://TonyChol.github.io/blog/2013/11/19/decision-system</id>
    <content type="html"><![CDATA[<h1 id="section">决策支持系统</h1>
<p><strong>第七章</strong></p>

<h2 id="section-1">大纲</h2>
<ol>
  <li>概况</li>
  <li>效用理论</li>
  <li>多目标决策（运筹学）</li>
  <li>期望损益决策</li>
</ol>

<h2 id="section-2">概况</h2>
<ol>
  <li>定义
    <ol>
      <li>在有风险或者不确定性的条件下指定决策，重要：（<strong>定量！</strong>）。</li>
      <li>运筹学的一支</li>
      <li>控制论的延伸</li>
      <li>管理科学的组成部分</li>
      <li>是社会科学和自然科学的交叉，典型的软科学。</li>
    </ol>
  </li>
  <li>分类
    <ol>
      <li>单人决策/多人决策</li>
      <li>单目标/多目标决策</li>
      <li>单步决策/多步决策</li>
      <li>确定型决策 风险型决策 etc</li>
    </ol>
  </li>
  <li>特点
    <ol>
      <li>面临选择</li>
      <li>后果的不确定性</li>
      <li>后果的价值待定</li>
      <li>例子： 火灾保险 库存问题 （腐烂问题、报贩进货）</li>
    </ol>
  </li>
  <li>几点说明
    <ol>
      <li>经济人的假设</li>
      <li>好的决策 = 好的结果？？？ 不一定的。好的决策是逻辑上的，好的结果是愿望（例子：炒股票） </li>
    </ol>
  </li>
  <li>随机决策问题的特点：
    <ol>
      <li>自然状态不确定 ——概率表示</li>
      <li>后果价值待定  ——以效用度量</li>
    </ol>
  </li>
</ol>

<h2 id="section-3">效用理论</h2>
<ol>
  <li>效用的定义
    <ol>
      <li>严格序 a is preferred to b</li>
      <li>无差异</li>
      <li>弱序</li>
    </ol>
  </li>
  <li>展望/预期
    <ol>
      <li>定义
        <ul>
          <li>各种后果极其概率的组合。 </li>
        </ul>
      </li>
      <li>确定当量</li>
      <li>效用函数 u(P1) u(P2)。。。
        <ul>
          <li>P1 P2 为后果</li>
        </ul>
      </li>
      <li>效用存在性公理（理性行为公理）
        <ul>
          <li>即便是后果再差，效用也不会是负无穷大，效用是有界的。</li>
          <li>效用函数的基数性和序数性
            <ul>
              <li>基数效用：在展望集P 上（考虑后果极其概率分布），是实数。</li>
              <li>序数效用：直接就是正整数， 1,2,3,4……</li>
            </ul>
          </li>
          <li>之后效用直接用货币来表示。
            <ul>
              <li>Friedmann-Savage 货币效用曲线（上下有界）</li>
              <li>决策树
 <img src="http://d.pr/i/Rs0D.png" alt="" /></li>
            </ul>
          </li>
        </ul>
      </li>
    </ol>
  </li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Modeling!]]></title>
    <link href="http://TonyChol.github.io/blog/2013/11/19/modeling/"/>
    <updated>2013-11-19T00:22:00+08:00</updated>
    <id>http://TonyChol.github.io/blog/2013/11/19/modeling</id>
    <content type="html"><![CDATA[<h1 id="section">大纲</h1>
<ol>
  <li>摘要</li>
  <li>Introduction</li>
  <li>问题重述</li>
  <li>
    <p>模型</p>

    <ol>
      <li>
        <p>基本模型</p>

        <ol>
          <li>
            <p>正常情况</p>

            <ul>
              <li>
                <p>区域划分的标准（定性）</p>

                <ol>
                  <li>固定面积人数</li>
                  <li>流通人数</li>
                </ol>
              </li>
              <li>
                <p>考虑标准（定量）</p>

                <ol>
                  <li>人员密度</li>
                  <li><strong><em>可使用面积/总面积</em></strong>（室内的障碍物/物品）</li>
                  <li>流动率</li>
                </ol>
              </li>
            </ul>
          </li>
          <li>
            <p>紧急情况</p>

            <p>解决!</p>
          </li>
        </ol>
      </li>
      <li>
        <p>改进模型</p>

        <ol>
          <li>
            <p>考虑因素</p>

            <ul>
              <li>
                <p><strong>(optional)考虑利益！！！！！！</strong></p>
              </li>
              <li>
                <p>舒适距离</p>
              </li>
            </ul>
          </li>
        </ol>
      </li>
    </ol>
  </li>
  <li>模型应用</li>
  <li>优缺点</li>
  <li>结论</li>
  <li>写一封信</li>
  <li>Reference</li>
</ol>

<h1 id="background">Background:</h1>

<p>To simplify our model, we need to elaborate a psychological concept: <strong>safety distance</strong>.</p>

<p><strong>Safety distance</strong> means the distance in which people feel comfortable with the unfamiliar people. The safety distance comes from the so-called “protective area” of 0.93m2, which is defined by the American psychologist Jane Jacobs. </p>

<p><img src="http://d.pr/i/OHRF.png" alt="" /></p>

<p>What’s more,we also define the construction area into three major categories: </p>

<ul>
  <li>business hall area</li>
  <li>aisles area</li>
  <li>storage area</li>
</ul>

<p><strong>But the only area we are interested in is the area for people’s activity(except for the bathroom, information desk, counter, etc.), which we call the “real area”.</strong></p>

<p>In this case, storage area are excluded. The “real area”  share 65% of its whole business hall area.</p>

<p><img src="http://d.pr/i/zCf.png" alt="" /></p>

<h1 id="definition-of-the-problem">Definition of the problem</h1>

<ol>
  <li>In case of urgent and safe situation,establish the standard seperately for the Lawful Capacity, which means the maximun number of people for a room to accommodate.</li>
  <li>Compare the differences among the results of different environments and rooms, such as  a cafeteria with tables and chairs, a gymnasium, a public swimming pool, and a lecture hall with rows and aisles.</li>
  <li>Do the simulation and compare our models to posted requirements or codes .</li>
  <li>Write an article based on our models and result for the local newspaper.</li>
</ol>

<h1 id="assumption-of-model-a">Assumption of Model A</h1>

<ol>
  <li>Assume the buildings we concentrate on are square multi-storey construction.</li>
  <li>The rate of all the people inside the building at different times in a day obeys the <strong>normal distribution</strong>.</li>
  <li>The number of the people on different storeys in a building obeys the  <strong>normal distribution</strong> as well.</li>
  <li>The environment on different storeys is constant and stable, <strong>no matter how many people there are.</strong></li>
  <li></li>
</ol>

<h1 id="assumption-of-model-b">Assumption of Model B</h1>

<ol>
  <li>Define the emergency in our case is the one which forces everyone in the room to notice the danger and make them escape from the danger.</li>
  <li>The The devastating attacts(such as the tsunami，terrorist attack,etc) are excluded.</li>
  <li>……</li>
</ol>

<h1 id="distinction-between">Distinction between</h1>

<ul>
  <li>心理距离</li>
  <li>人员密度</li>
  <li>计算面积占总面积的比率</li>
</ul>

<table>
  <thead>
    <tr>
      <th>场合</th>
      <th>心理距离</th>
      <th>人员密度</th>
      <th>计算面积占总面积的比率</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>Hall</strong></td>
      <td> </td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td><strong>pool</strong></td>
      <td> </td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td><strong>cafe</strong></td>
      <td> </td>
      <td> </td>
      <td> </td>
    </tr>
  </tbody>
</table>

<h1 id="abstract">Abstract</h1>

<h1 id="introduction">Introduction</h1>

<p>We present two models to solve the “lawful capacity” problem, which is to establish a standard to determine the number of the people to evacuate a giving room. In the first model, considering it is a complex project to completely solve the problem, we simplified the problem and to consider the buildings with square multi-storey construction. Meanwhile, we find out that both the rate of all the people inside the building at different times in a day and the number of the people on different storeys obeys the <strong>normal distribution</strong>. We transformed our square multi-storey model into a spherical multi-storey model. And to solve the spherical model, we need to elaborate a psychological concept proposed by the American psychologist Jane Jacobs: <strong>safety distance</strong>, which implies a circular range for a people from being bothered by strangers. And we defined the radius of the circular range as the “safety distance”.</p>

<p>正态分布 和 球形半径
三种类型 咖啡馆啥啥啥的~~~~~~</p>

<h1 id="section-1">教训</h1>
<ol>
  <li>应该有一个记录员，记下任何在讨论过程当中值得深入的东西。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我的 iPhone Apps]]></title>
    <link href="http://TonyChol.github.io/blog/2013/11/09/wo-de-iphone-apps/"/>
    <updated>2013-11-09T00:35:00+08:00</updated>
    <id>http://TonyChol.github.io/blog/2013/11/09/wo-de-iphone-apps</id>
    <content type="html"><![CDATA[<p>最近入了一台 iPhone ，正式踏上iOS的旅程，（我至今没有很好地用过安卓啊！！）也想分享一下我在iPhone 下使用的 Apps 。</p>

<p>首先我有两个 Apple ID ，一个中国区，一个美国区。</p>

<p>中国区的账号用于方便地充值购买应用，而美国区的账号就是用来充 “Free my apps” 的 Gift Card , 另外还可以下载一些中国区帐号无法下载的Apps（比如 mailbox ， Skype 等等等等）。</p>

<p>ˊ_&gt;ˋ</p>

<p>关于Free my apps这个服务，我之后详细说，现在你们看到这里，我就先热烈推荐一下！</p>

<p>首先放出 Home Screen 截图:</p>

<p><img src="http://d.pr/i/l1QN.png" alt="" />
<img src="http://d.pr/i/umQ2.png" alt="" />
<img src="http://d.pr/i/rHuu.png" alt="" />
<img src="http://d.pr/i/LM4B.png" alt="" /></p>

<p>写这篇文章的目的，其实是想分享一下我所使用的移动互联网的服务，而软件只是我们所使用的互联网服务的载体，所以分享我手机上的 Apps 当然相当于介绍了我所使用的服务。这是其中的逻辑关系。
（上述是理科男扯淡，勿喷ㄟ( ▔, ▔ )ㄏ）</p>

<p>纵观所有，我想说一些特别的 Apps :</p>

<blockquote>
  <ul>
    <li>Nike Running(<strong>跑步你说呢？</strong>)</li>
    <li>Pocket（<strong>稍后读服务</strong>）</li>
    <li>Reeder（<strong>博客订阅 Google Reader 的遗孀</strong>）</li>
    <li>Dropbox（<strong>支持所有主流操作系统的文件同步工具，谁用谁知道</strong>）</li>
    <li>Grid Diary（<strong>中文名：格致，提醒你「吾日三省吾身」~~~</strong>）</li>
    <li>Mailbox（<strong>很有特点的 Gmail 客户端，以一种 GTD 的方式引导你整理邮件</strong>）</li>
    <li>Biscuit（<strong>英语党必备，背词神器</strong>）</li>
    <li>Circa（<strong>英语党必备2，英语新闻推送服务</strong>）</li>
    <li>IFTTT（<strong>好用到无法直视的触发器服务，比如「if 下雨, 给你发短信，提醒你带伞」</strong>）</li>
    <li>Droplr（<strong>简单好用的小文件共享工具，本博客的所有图片均来自 Droplr</strong>）</li>
  </ul>
</blockquote>

<p>接下来详细说。
To be continued……</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[数据库实验报告3]]></title>
    <link href="http://TonyChol.github.io/blog/2013/11/04/shu-ju-ku-shi-yan-bao-gao-3/"/>
    <updated>2013-11-04T20:33:00+08:00</updated>
    <id>http://TonyChol.github.io/blog/2013/11/04/shu-ju-ku-shi-yan-bao-gao-3</id>
    <content type="html"><![CDATA[<h4 id="section">本次实验报告的内容是按照要求，建立图书管理系统的数据库。</h4>

<ol>
  <li>
    <p>建立现有图书管理系统数据库(bookmanager)，给出创建这些数据库对象的SQL命令。</p>

    <ul>
      <li>
        <p>建立数据库（bookmanager）,并且建立表格 readers，borrowinf，books 和 readertype，最后插入相关数据：</p>

        <pre><code>  CREATE DATABASE bookmanager;
  USE bookmanager;
  CREATE TABLE readers(
 		编号 VARCHAR(8) NOT NULL,
 		姓名 VARCHAR(8) NOT NULL,
 		读者类型 int NOT NULL,
 		已借数量 int NOT NULL
 		);　
 		CREATE TABLE borrowinf(
 		读者编号 VARCHAR(8) NOT NULL,
 		图书编号 VARCHAR(15) NOT NULL,
 		借期 DATE NOT NULL,
 		还期 DATE //借期可以是空值！
 		);
 		CREATE TABLE books(
 		编号 VARCHAR(15) NOT NULL,
 		书名 VARCHAR(42) NOT NULL,
 		作者 VARCHAR(8) NOT NULL,
 		出版社 VARCHAR(28) NOT NULL,
 		定价 FLOAT(4,2) NOT NULL
 		);
 		 CREATE TABLE readertype
 		(类型编号 int,
 		类型名称 VARCHAR(8),
 		限借阅数量 int,
 		借阅期限 int
 		);
</code></pre>

        <p><img src="http://d.pr/i/6NGB.png" alt="" /> </p>

        <p><img src="http://d.pr/i/pHzj.png" alt="" /></p>
      </li>
      <li>
        <p>导入数据</p>

        <ul>
          <li>
            <p>可以通过 txt 文档快速导入数据！</p>

            <p>格式如下：</p>

            <pre><code>  LOAD DATA LOCAL INFILE "路径名" INTO TABLE 表格名称(列名1,列名2,列名3,列名4，...);
</code></pre>

            <p>建立的 txt 文档如图所示：</p>

            <p><img src="http://d.pr/i/FgpM.png" alt="" /></p>

            <p><img src="http://d.pr/i/DYot.png" alt="" /></p>

            <p>例如，在本表格：</p>

            <pre><code>  LOAD DATA LOCAL INFILE "/Users/TonyChol/Desktop/reader.txt" INTO TABLE readers(编号,姓名,读者类型,已借数量);
			
  LOAD DATA LOCAL INFILE "/Users/TonyChol/Desktop/borrowinf.txt" INTO TABLE borrowinf(读者编号,图书编号,借期,还期);
			
  LOAD DATA LOCAL INFILE "/Users/TonyChol/Desktop/books.txt" INTO TABLE books(编号,书名,作者,出版社,定价);//这里存在一个问题，就是 FLOAT 的小数数位中，整数数位的参数能都省略？
			
  LOAD DATA LOCAL INFILE "/Users/TonyChol/Desktop/readertype.txt" INTO TABLE readertype(类型编号,类型名称,限借阅数量,借阅期限);
</code></pre>
          </li>
        </ul>

        <p><img src="http://d.pr/i/hEtY.png" alt="" /></p>

        <p><img src="http://d.pr/i/NwUq.png" alt="" /></p>

        <p><img src="http://d.pr/i/RZrv.png" alt="" /></p>

        <p><img src="http://d.pr/i/LuDc.png" alt="" /></p>
      </li>
    </ul>
  </li>
  <li>
    <p>写出完成下列操作的SQL命令。</p>

    <ul>
      <li>分别建立表readers、books上的主键索引。
        <ul>
          <li>首先，主键算是一种索引，更通俗的讲，主键中的记录必须是「NOT NULL」的，而且是「UNIQUE」的。</li>
          <li>声明主键的方法有两种：
            <ul>
              <li>
                <p>在创建表的时候就给表加上主键：</p>

                <pre><code>  CREATE TABLE 表名 (
  字段描述等等等... , 
  PRIMARY KEY(某列名1,某列名2,...));
</code></pre>
              </li>
              <li>
                <p>也可以更新表结构时为表加上主键：</p>

                <pre><code>  ALTER TABLE 表名 ADD PRIMARY KEY (某列名1,某列名2,...);
</code></pre>
              </li>
            </ul>
          </li>
          <li>
            <p>具体操作：˙</p>

            <ul>
              <li>
                <p>在 Terminal 中输入：</p>

                <pre><code>  ALTER TABLE readers ADD PRIMARY KEY (编号);
</code></pre>

                <p>结果出现了意想不到的错误：</p>

                <p>提示：</p>

                <pre><code>       Duplicate entry '20060600' for key 'PRIMARY'
</code></pre>

                <p><img src="http://d.pr/i/vCsu.png" alt="" /></p>

                <p>后来 Google 之后发现，是原来的「readers」表格中，「编号」列里的数据重复，原因是在创建表的时候定义列的字符长度果断，导致插入的记录（也就是「编号」）重复。 必须修改列中的数据才能插入主键。</p>
              </li>
              <li>
                <p>在修改了列中的记录之后，再次输入插入主键的 SQL 语句，提示成功！</p>

                <p><img src="http://d.pr/i/I5ks.png" alt="" /></p>
              </li>
              <li>
                <p>在 books 表中添加主键，主键是「编号」：</p>

                <p><img src="http://d.pr/i/ehuS.png" alt="" /></p>
              </li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>给出借阅超期信息单。</p>
  </li>
  <li>
    <p>查询编号为“2005060328”的读者的借阅信息。</p>

    <ul>
      <li>
        <p>具体操作：</p>

        <pre><code>  SELECT 读者编号,姓名,图书编号,借期,还期,书名,作者,出版社,定价   
  FROM borrowinf,books,readers 
  WHERE borrowinf.读者编号 = readers.编号 AND  
  books.编号 = borrowinf.图书编号 AND  
  borrowinf.读者编号 = 2005060328;
</code></pre>
      </li>
    </ul>

    <p><img src="http://d.pr/i/3huH.png" alt="" /></p>
  </li>
  <li>
    <p>查询姓名为“王立群”的读者的借阅信息。</p>

    <ul>
      <li>
        <p>具体操作：</p>

        <pre><code>  SELECT 读者编号,姓名,图书编号,借期,还期,书名,作者,出版社,定价   
  FROM borrowinf,books,readers 
  WHERE borrowinf.读者编号 = readers.编号 
  AND  books.编号 = borrowinf.图书编号 
  AND  readers.姓名 = '王立群';
</code></pre>
      </li>
    </ul>

    <p><img src="http://d.pr/i/kxV4.png" alt="" /></p>
  </li>
  <li>
    <p>查询类型为“研究生”的读者信息。</p>

    <ul>
      <li>
        <p>一开始输入：</p>

        <pre><code>  SELECT   readers.编号, 姓名, 已借数量,  图书编号,  书名   
   FROM readers, borrowinf, books 
   WHERE readers.读者类型 = 2 AND  
   readers.编号 = borrowinf. 读者编号 AND  
   books.编号 = borrowinf. 图书编号;
</code></pre>
      </li>
      <li>
        <p>结果报错：</p>

        <pre><code>  ERROR 1052 (23000): Column '编号' in field list is ambiguous
</code></pre>
      </li>
      <li>
        <p>是因为第一行的「编号」是模凌两可的，无法辨别，必须加上前缀！</p>

        <pre><code>  SELECT readers.编号, 姓名, 已借数量, 图书编号, 书名   
  FROM readers, borrowinf, books 
  WHERE readers.读者类型 = 2 AND  
  readers.编号 = borrowinf. 读者编号 AND  
  books.编号 = borrowinf. 图书编号;
</code></pre>
      </li>
    </ul>

    <p><img src="http://d.pr/i/QLtD.png" alt="" /></p>
  </li>
  <li>
    <p>查询书名中包含文字“程序设计”的图书信息。</p>
  </li>
  <li>
    <p>查询图书馆的藏书量。</p>
  </li>
  <li>
    <p>查询图书馆的图书总值。</p>
  </li>
  <li>
    <p>查询出版社的馆藏图书数量。</p>
  </li>
  <li>
    <p>查询“2007-1-1”至“2007-12-31”各类读者的借阅数量。</p>
  </li>
  <li>
    <p>查询“2007-1-1”至“2007-12-31”作者为“梁晓峰”的图书的借阅情况。</p>
  </li>
  <li>
    <p>查询借阅了作者为“张大海”的图书的读者编号和图书编号。</p>
  </li>
  <li>
    <p>查询所有教师的借阅图书情况，包括读者编号、姓名和已借数量。</p>
  </li>
  <li>
    <p>查询所有书名为“C语言程序设计”的读者编号和借阅日期。</p>
  </li>
  <li>
    <p>查询借阅日期与至少一位读者借阅日期相同的所有读者编号和姓名。</p>
  </li>
  <li>
    <p>查询所有研究生借阅图书的情况，包括姓名、已借数量、所借书名、借期和还期。</p>
  </li>
  <li>
    <p>查询“蓝天”出版社出版的图书借阅情况，包括读者编号、借期、还期。用连接查询和子查询两种方法实现。</p>
  </li>
  <li>
    <p>查询没有借阅“青山”出版社图书的读者编号。</p>
  </li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[数据库实验报告2]]></title>
    <link href="http://TonyChol.github.io/blog/2013/11/04/shu-ju-ku-shi-yan-bao-gao-2/"/>
    <updated>2013-11-04T20:18:00+08:00</updated>
    <id>http://TonyChol.github.io/blog/2013/11/04/shu-ju-ku-shi-yan-bao-gao-2</id>
    <content type="html"><![CDATA[<h3 id="section">上机实验2步骤</h3>

<ul>
  <li>创建数据库
    <ul>
      <li>
        <p>登陆MySQL：在终端输入命令：</p>

        <pre><code>  mysql -p -u root
</code></pre>
      </li>
      <li>
        <p>输入命令：</p>

        <pre><code>  CREATE DATABASE mysqlTest;
</code></pre>
      </li>
      <li>
        <p>终端提示数据库创建成功：</p>

        <pre><code>  Query OK, 1 row affected (0.02 sec)
</code></pre>
      </li>
    </ul>

    <p><img src="http://d.pr/i/MTEO.png" width="640" />
  * 在终端输入以下命令以查看创建的数据库：</p>

    <pre><code>      SHOW DATABASES;
</code></pre>

    <ul>
      <li>可以看到出现了新创建的数据库。</li>
    </ul>

    <p><img src="http://d.pr/i/vX4b.png" width="640" /></p>

    <ul>
      <li>
        <p>删除数据库：</p>

        <pre><code>  DROP DATABASE mysqlTest;
</code></pre>

        <p>这样就删除了mysqlTest这个数据库。</p>
      </li>
    </ul>

    <p><img src="http://d.pr/i/f9pc.png" width="640" /></p>
  </li>
  <li>
    <p>创建表，更改表和删除表</p>

    <ul>
      <li>创建表
        <ol>
          <li>
            <p>新建一个数据库：</p>

            <pre><code> CREATE DATABASE schedule;
</code></pre>
          </li>
          <li>
            <p>在这个数据库建表之前要使用此数据库：</p>

            <pre><code> USE schedule;
</code></pre>
          </li>
          <li>
            <p>输入命令：</p>

            <pre><code>CREATE TABLE classTable
(
    class_name VARCHAR(15) NOT NULL,
    class_date DATE NOT NULL
);
</code></pre>

            <ul>
              <li>这里的classTable表示我要在「schedule」这个数据库里建立「classTable」的表格，括号里面的内容是表格的呈现的属性名称，对应的数据类型以及相应的数据属性，也就是「NULL」和「NOT NULL」。</li>
            </ul>
          </li>
          <li>
            <p>创建表格之后可以查看这个表格的结构，输入命令：</p>

            <pre><code> DESCRIBE classTable;
</code></pre>

            <p>可以在终端中得到一个表格（如图）：</p>
          </li>
        </ol>
      </li>
    </ul>

    <p><img src="http://d.pr/i/fk8C.png" width="640" /></p>

    <ul>
      <li>
        <p>更改表</p>

        <ol>
          <li>
            <p>重命名表格</p>

            <pre><code> ALTER TABLE classTable RENAME timetable;
</code></pre>

            <p><img src="http://d.pr/i/hpNj.png" alt="" /></p>
          </li>
          <li>
            <p>向表中添加一列：</p>

            <pre><code> ALTER TABLE timetable ADD id int;
</code></pre>

            <p><img src="http://d.pr/i/anyQ.png" alt="" /></p>
          </li>
          <li>
            <p>删除表中的一列：</p>

            <pre><code> ALTER TABLE timetable DROP id;
</code></pre>

            <p><img src="http://d.pr/i/yZVP.png" alt="" /></p>
          </li>
          <li>
            <p>修改一个列的数据类型：</p>

            <pre><code> ALTER TABLE timetable MODIFY class_name VARCHAR(50);
</code></pre>

            <p><img src="http://d.pr/i/qhaw.png" alt="" /></p>
          </li>
          <li>
            <p>重命名一个列：</p>

            <pre><code> ALTER TABLE timetable CHANGE COLUMN class_name class varchar(50);
</code></pre>

            <p><img src="http://d.pr/i/wtMH.png" alt="" /></p>
          </li>
        </ol>

        <p><strong>最终修改过后的表格如图：</strong></p>

        <p><img src="http://d.pr/i/ePeV.png" alt="" /></p>
      </li>
      <li>
        <p>删除表</p>

        <pre><code>  DROP TABLE testtable;
  //此步为删除一个叫做「testtable」的表格。   ![](http://d.pr/i/w8PF.png)
</code></pre>

        <p>删除列已经在「更改表」中提及。</p>
      </li>
      <li>
        <p>对表格进行查询</p>

        <ol>
          <li>
            <p>基本查询：</p>

            <pre><code> SELECT * from timetable;
</code></pre>

            <p>这个时候的截图是这个样子（提示Empty set）
  <img src="http://d.pr/i/vRon.png" alt="" /></p>
          </li>
        </ol>

        <p>这个时候应该给表格增加内容给：</p>

        <p><img src="http://d.pr/i/CRgM.png" alt="" /></p>

        <p>此时表timetable增加了一行，也就是一个记录。</p>

        <p>这个时候再次执行命令：</p>

        <pre><code>  SELECT * from timetable;
</code></pre>

        <p>就看到了新的记录。
  <img src="http://d.pr/i/Rj4R.png" alt="" /></p>
      </li>
    </ul>

    <ol>
      <li>
        <p>WHERE 子句：</p>

        <ul>
          <li>先给表格添加额外的列：</li>
        </ul>

        <hr />

        <pre><code> //添加「学分」属性
 ALTER TABLE timetable ADD credit int;
 //修改「class_date」成「class_day」，显示星期几
 ALTER TABLE timetable CHANGE COLUMN class_date class_day VARCHAR(10);
 desc timetable;
</code></pre>

        <p><img src="http://d.pr/i/1vRC.png" alt="" /></p>

        <ul>
          <li>再给表格加上几条记录：</li>
        </ul>

        <hr />

        <pre><code> INSERT INTO timetable VALUES ('changweifenfangcheng', 'Mon', 3);
 INSERT INTO timetable VALUES ('MySQL', 'Wed', 3);
 INSERT INTO timetable VALUES ('data analysis', 'Fri', 3);
 INSERT INTO timetable VALUES ('career planning','Wen', 2);
 SELECT * from timetable;
</code></pre>

        <p><img src="http://d.pr/i/nj8y.png" alt="" />				</p>

        <ul>
          <li>开始查询：</li>
        </ul>

        <hr />

        <pre><code> //查询2学分的课程
 SELECT * FROM timetable WHERE credit = 2;  ![](http://d.pr/i/7jUC.png)
</code></pre>

        <ul>
          <li>
            <p>在表格中进行插入：</p>

            <pre><code>  //插入课程：马克思
  INSERT INTO timeable VALUES ('Makesi', 'Mon', 3);
</code></pre>
          </li>
        </ul>

        <p><img src="http://d.pr/i/9ijG.png" alt="" /></p>

        <ul>
          <li>
            <p>删除某行：</p>

            <pre><code>  //删除课程：马克思
  DELETE FROM timetable WHERE class = 'Makesi';
</code></pre>
          </li>
        </ul>

        <p><img src="http://d.pr/i/JVrU.png" alt="" /></p>

        <ul>
          <li>
            <p>更改数据：</p>

            <pre><code>  //修改课程「MySQL」为「Database」
  UPDATE timetable SET class = 'Database' WHERE class = 'MySQL';
</code></pre>
          </li>
        </ul>

        <p><img src="http://d.pr/i/WHrP.png" alt="" /></p>

        <ul>
          <li>
            <p>这里遇到了一些问题：<strong>当中最大的问题就是无法插入带有中文字符的记录</strong>:</p>

            <p>一旦输入中文，就会有如下提示：</p>

            <pre><code>  Incorrect string value: '\xE5\x90\x8C\xE5\xAD\xA6' 
</code></pre>

            <p><img src="http://d.pr/i/wsfm.png" alt="" /></p>

            <ul>
              <li>如何解决呢？？</li>
            </ul>

            <p>只须在创建数据库的时候加上参数：</p>

            <pre><code>      default charset utf8 collate utf8_unicode_ci;
</code></pre>

            <p>例如：</p>

            <pre><code>      create database cc default charset utf8 collate utf8_unicode_ci;
</code></pre>

            <p>这样子在插入中文记录的时候就不会再报错了。</p>
          </li>
        </ul>
      </li>
    </ol>
  </li>
  <li>
    <p>视图</p>

    <p>首先视图是什么？</p>

    <blockquote>
      <p>视图是一个虚拟的表，可以理解成现有表格的引用。
作用在于筛选有用的数据
每当查询视图时，MySQL通过使用 SQL 语句来重建数据。</p>
    </blockquote>

    <ul>
      <li>
        <p>创建视图的格式：</p>

        <pre><code>  CREATE VIEW view_name AS
  SELECT column_name(s)
  FROM table_name
  WHERE ......
</code></pre>
      </li>
      <li>
        <p>具体操作：</p>

        <pre><code>  CREATE VIEW threeCredit AS
  SELECT class 
  		FROM timetable
  		WHERE credit = 3;
</code></pre>
      </li>
    </ul>

    <p><img src="http://d.pr/i/NbK.png" alt="" /></p>

    <ul>
      <li>再删除表中的「抽象代数」，试试看更新「threeCredit」视图：</li>
    </ul>

  		SELECT * from timetable;

    <p><img src="http://d.pr/i/GHKm.png" alt="" /></p>

  		DELETE FROM timetable WHERE class = ‘抽象代数’;

    <p><img src="http://d.pr/i/pOIN.png" alt="" /></p>

  		SELECT * FROM threeCredit;
  		//查询视图；

    <p><img src="http://d.pr/i/EI3o.png" alt="" /></p>

    <p><strong>这说明只要原表格的数据更改了变化了，那么视图里的数据也会更着改变，即视图可以看做是原表格的引用！</strong></p>

    <ul>
      <li>
        <p>视图的更新：</p>
      </li>
      <li>
        <p>更新视图的 SQL 语句格式：</p>
      </li>
    </ul>

  		ALTER VIEW view_name AS
    <pre><code>      SELECT column_name(s)
      FROM table_name
      WHERE ......
</code></pre>

    <ul>
      <li>
        <p>具体操作（给原来的视图加上 class_day 一列）</p>

        <pre><code>  ALTER VIEW threeCredit AS
  SELECT class,class_day
  FROM timetable
  WHERE credit = 3;
</code></pre>
      </li>
    </ul>

    <p><img src="http://d.pr/i/HknD.png" alt="" /></p>
  </li>
  <li>
    <p>索引的建立</p>

    <ul>
      <li>
        <p>「索引」的用途：</p>

        <ul>
          <li>在表中创建索引，以便更加快速高效地查询数据。</li>
        </ul>
      </li>
      <li>
        <p>索引建立的 SQL 语句格式：</p>

        <pre><code>  CREATE INDEX index_name
  ON table_name (column_name)
</code></pre>
      </li>
      <li>
        <p><strong>如果希望以降序(升序)索引某个列中的值，可以在列名称之后添加保留字 DESC（ASC）：</strong></p>
      </li>
      <li>
        <p><strong>假如希望索引不止一个列，也可以在括号中列出这些列的名称，用逗号隔开：</strong></p>
      </li>
      <li>
        <p>具体操作:</p>

        <ul>
          <li>
            <p>创建一个简单的索引，名为 “classIndex”，在 timetable 表的 class 列：</p>

            <pre><code>  CREATE INDEX classIndex
  ON timetable(class);
</code></pre>
          </li>
        </ul>

        <p><img src="http://d.pr/i/z5J3.png" alt="" /></p>

        <ul>
          <li>
            <p>创建多列的索引，加上排序：</p>

            <pre><code>  CREATE INDEX classIndexDESC
  ON timetable(class,credit DESC);		
</code></pre>
          </li>
        </ul>

        <p><img src="http://d.pr/i/kjQk.png" alt="" /></p>

        <ul>
          <li>
            <p>删除索引：</p>

            <pre><code>  ALTER TABLE timetable DROP INDEX classIndexDESC;
</code></pre>
          </li>
        </ul>

        <p><img src="http://d.pr/i/rUdz.png" alt="" /></p>
      </li>
    </ul>
  </li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[title]]></title>
    <link href="http://TonyChol.github.io/blog/2013/11/04/title/"/>
    <updated>2013-11-04T20:07:00+08:00</updated>
    <id>http://TonyChol.github.io/blog/2013/11/04/title</id>
    <content type="html"><![CDATA[<p>这个是我的第一个 Octopress 文章！</p>
]]></content>
  </entry>
  
</feed>
